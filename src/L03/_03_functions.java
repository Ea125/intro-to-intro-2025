package L03;

import java.util.Scanner;

public class _03_functions {
    /*
    פונקציה היא קטע קוד שניתן לקרוא לו ולהפעיל אותו ממקומות שונים בתוכנית.

    אפשר לדמות פונקציה למתכון, כמו שמתכון הוא סדרת פעולות שיש לבצע כדי להכין עוגה ככה גם פונקציה.

    למשל נרצה ליצור פונקציה שמקבלת שמקבלת שני מספרים ומחברת אותם, זה יהיה כמו "מתכון" לחיבור:
    1. קבל שני מספרים
    2. החבר אותם
    3. החזר את התוצאה

    עכשיו שנרצה לחבר שני מספרים ניעזר במתכון שיצרנו, ולא נצטרך לחשוב על הפעולות שיש לבצע כדי לחבר אותם.

    עוד דימוי שיכול לעזור:
    פונקציות הן כמו קופסה שחורה שאנחנו רק יודעים מה היא עושה, ולא איך היא עושה את זה.
    דוגמא לפונקציה שראינו כבר היא System.out.println

     פונקציות בג'אווה:
     כמו תמיד ג'אווה נותנת לנו לעבוד קשה כדי ליצור פונקציות (אבל מתרגלים לזה).

     המבנה הבסיסי של פונקציה בג'אווה הוא:
     public static <return_type> <function_name>(<parameters>) {
         // code
     }

     כאשר נחליף את מה שיש בפנים במה שנרצה.

     <return_type> - סוג הערך שהפונקציה מחזירה. כגון int, double, String וכדומה.
     סוג מיוחד שעדיין לא ראינו הוא void, שמציין שהפונקציה לא מחזירה ערך.

    <function_name> -
    השם של הפונקציה, צריך להיות מילה אחת, נהוג לכתוב אותו בcamel case(המילה הראושנה באות קטנה וכל מילה אחרי מתחילה באות גדולה).
    בדרך כלל ניתן לפונקציות שמות משמעותיים.
    צריך לשים לב לא לתת לפונקציה שם של מילה שמורה (אחרת נקבל שגיאה)

    <parameters> - הערכים שהפוקנציה אמורה לקבל. למשל בדוגמא של החיבור אלו יהיו שני מספרים.

     בינתיים תמיד נשתמש במילה השמורה public ובמילה השמורה static, נסביר את המשמעות שלהם בהמשך.

     */

    /*
    דוגמאות:
     */


    /**
     * חיבור שני מספרים
     */
    public static int add(int x, int y) {
        int sum = x + y;
        return sum;
    }

    public static int div(int x, int y) {
        return x / y;
    }


    /*
    בדוגמא למעלה אפשר לראות איך הגדרנו את הפונקציה sum:
    הגדרנו שהיא מחזירה int, לאחר מכן נתנו לה שם ואז את הפרמטרים שהיא מקבלת - במקרה הזה שני מספרים שלמים שקארנו להם x ו y

    לאחר מכן חישבנו את הסכום שלהם (שימו לב שאפשר לקרוא לשמתנה בשם של הפונקציה).
    להבסוף החזרנו את הערך בעזרת המילה השמורה return.
     */

    /**
     * הדפסת שלום
     */
    public static void sayHello(String name) {
        System.out.println("Hello " + name);

    }
    //sayHello("Avi");

    /*
    בדוגמא למעלה, ראינו את השימוש לפונקציות void
    כאן לא צריך להחזיר ערך, אנחנו רק רוצים להגיש שלום למי שקורא לפונקציה.
     */


    public static void main(String[] args) {
        System.out.println("4 + 5 = " + add(4, 5));
        System.out.println("4 + (-5) = " + add(4, -5));
        System.out.println("0/2 = " + div(0, 2));


        Scanner in = new Scanner(System.in);
        System.out.println("Enter your name: ");
        String name = in.nextLine();
        sayHello(name);

    }
}
